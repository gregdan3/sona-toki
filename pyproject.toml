[project]
name = "sonatoki"
version = "0.8.4"
description = "ilo li moku e toki li pana e sona ni: ni li toki ala toki pona?"
authors = [
  { name = "jan Kekan San (@gregdan3)", email = "gregory.danielson3@gmail.com" },
]
dependencies = [
    "unidecode>=1.3.6",
    "regex>=2023.12.25",
    "typing-extensions>=4.11.0",
    "emoji>=2.12.1",
]
requires-python = ">=3.8"
readme = "README.md"
license = { text = "AGPL-3.0-or-later" }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
test = [
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=5.0.0",
    "pytest>=7.4.2",
    "hypothesis>=6.86.2",
    "line-profiler>=4.1.1",
    "pyyaml>=6.0.1",
    "ipython>=8.12.3",
]
lint = [
    "black>=23.9.1",
    "isort>=5.12.0",
    "docformatter>=1.7.5",
]
doc = [
    # "sphinx>=7.1.2",
    # "furo>=2023.9.10",
    # "sphinx-intl>=2.1.0"
]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
testpaths = [
    "tests/",
]

[tool.isort]
length_sort = "1"
profile = "black"
sections = "STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
import_heading_stdlib = "STL"
import_heading_thirdparty = "PDM"
import_heading_firstparty = "LOCAL"
import_heading_localfolder = "FILESYSTEM"

[tool.pyright]
include = ["src/", "tests/"]
exclude = ["**/__pycache__", "**/__pypackages__", "**/.venv"]
venvPath = "."
venv = ".venv"
executionEnvironments = [{ root = "." }]

[tool.ruff]
line-length = 88
src = ["src"]

[tool.coverage.run]
branch = true
source = ["src/sonatoki/"]
omit = [
    "src/sonatoki/__main__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
